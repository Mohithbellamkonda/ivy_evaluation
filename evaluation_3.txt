1st-question

using System.Linq;
namespace evaluation_1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("enter size of an array");
            int a = Convert.ToInt32(Console.ReadLine());
            int[] b = new int[a];
            Console.WriteLine("enter elements of an array");
            for (int i = 0; i < a; i++)
            {
                b[i] = Convert.ToInt32(Console.ReadLine());
            }
            Console.WriteLine("max of given array");
            Console.WriteLine(b.Max());
            Console.WriteLine("min of given array");
            Console.WriteLine(b.Min());






        }
   
    
    
    
    
    }
}

5th-question


using System.Reflection;
using System.Security.Cryptography.X509Certificates;
using System.Text;

namespace deligates
{
    public delegate void algo(int i);
    internal class Program
    {
       
        public static void factor(int a)
        {
            for(int i = 1; i <= a; i++)
            {
                if (a % i == 0)
                {
                    Console.Write(i+" ");
                }
            }
        }
        public static void table(int a)
        {
            for (int i = 1; i <= 10; i++)
            {
               Console.WriteLine("{0} * {1} ={2}",a,i,a*i);
            }
        }
        static void Main(string[] args)
        {
            Console.WriteLine("enter the number for table");
            
            int a=Convert.ToInt32(Console.ReadLine());
            algo obj = new algo(table);
            obj.Invoke(a);
           
           
            
           
 
            Console.WriteLine("enter the number for finding factor");
            int d = Convert.ToInt32(Console.ReadLine());
            obj = factor;
            obj.Invoke(d);






        }




    }
}

9th-queston


using System.Security.Cryptography.X509Certificates;

namespace evaluation_9
{
    public delegate void cal();
    internal class Employee
    { public string employee_name;
        public int avg_work_hours;
        public int leaves;
        public string work_feedback;
        public Employee(string l,int i,int j,string k)
        {
            employee_name = l;
             avg_work_hours= i;
             leaves = j;
             work_feedback = k;
        }
        public void promotion()
        {
            if (leaves <= 20 && avg_work_hours >= 7 && work_feedback == "good")
            {
                Console.WriteLine("Congo! you got promoted-{0}",employee_name);
            }
            else
            {
                Console.WriteLine("Try next year for promotion -{0}",employee_name);
            }
        }
      

        static void Main(string[] args)
        {

            for(int i = 0; i < 5; i++)
            {
                Console.WriteLine("Enter name of the employee");
                string name=Console.ReadLine();
                Console.WriteLine("Enter avg working hours");
                int j = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("Enter leaves taken in a year");
                int m = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("Enter feed_back good or bad");
                string k=Console.ReadLine();

                Employee employee = new Employee(name, j, m, k);
                cal obj = new cal(employee.promotion);
                obj.Invoke();
            }

            
        }
    }
}


3rd-question

namespace evaluation_3
{
    interface ivehicle
    {
        void drive();
        bool refuel(int rem);
    }
    class car : ivehicle
    {
        public int car_starting;
        public int rem;
        public void drive()
        {
            Console.WriteLine("car drive status"+"-"+refuel(rem));

        }
        public bool refuel(int rem)
        {
            if (car_starting - rem > 20)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }
    internal class Program
    {
        static void Main(string[] args)
        {
          car car = new car();
            car.car_starting = 90;
            car.rem = 72;
            car.drive();
        }
    }
}


4rth-question


namespace evaluation_4
{
    public abstract class Bird
    {
        public string name;
        public void set_name(string name1)
        {
            name = name1;
    
        }
        
        public string get_name()
        {
            return name;
        }
        
        public void fly()
        {
            Console.WriteLine(name+" "+ "flying");
        }
        public abstract void eat();
    }

    class crow : Bird
    {
        public override void eat()
        {
            Console.WriteLine("{0} is eating ",name);
        }
    }
    
    internal class Program
    {
        static void Main(string[] args)
        {
            crow crow = new crow();
            crow.set_name("mangalia_crow");
            Console.WriteLine(crow.get_name());
            crow.fly();
            crow.eat();
           
            
        }
    }
}

2nd question
using System.Collections;
namespace evaluation_2
{
    class Phonebook
    {
        public string name;
        public string phonenumber;
    }
    class student : Phonebook
    {
        public int age;
        public ArrayList a;
        public Dictionary<string,ArrayList> data;
        public student(int age,string  name,string phonenumber)
        {
            this.age = age;
            this.name = name;
            this.phonenumber = phonenumber;
            a=new ArrayList();
            a.Add(age);
            a.Add(phonenumber);
            data = new Dictionary<string,ArrayList>();
            data.Add(name,a);
        }

        public Dictionary<string,ArrayList> Student_data()
        {
 
            return data;
        }

    
    
    
    }
   
   


    internal class program
    {
        static void Main(String[] args)
        {
            

            student ram = new student(22, "ram", "1234");
            foreach (string key in ram.Student_data().Keys)
            {
                Console.WriteLine(key);
                Console.WriteLine(ram.Student_data()[key]);
            }
        }
    }
}


question-7

using System.Collections;
using System.Linq;

namespace queque
{
    class person
    {
        public string name;
        public int age;
        public ArrayList c = new ArrayList();
        public Queue<ArrayList> a=new Queue<ArrayList>();
        public void Tostring()
        {
            c.Add(name);
            c.Add((int)age);
            a.Enqueue(c);
            foreach(ArrayList item in a)
            {
                foreach(var v in item)
                {
                    Console.Write(v+":");
                }
            }

        }

    }
    internal class program
    {
        static void Main(string[] args)
        {
            person Person=new person();
            Person.age = 22;
            Person.name = "hari";
            Person.Tostring();
        }
    }
}

question -6

using System;
using System.IO;


namespace filehandiling
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string filepath = @"C:\\Users\\mohith.bellamkonda\\OneDrive - Entain Group\\Documents\\sample1.txt";
            string file_2 = @"C:\\Users\\mohith.bellamkonda\\OneDrive - Entain Group\\Documents\\cop2.txt";
            File.Copy(filepath, file_2);
            Console.WriteLine(File.ReadAllText(file_2));
            try
            {
                File.Move(file_2,@"c:\\users\\mohith.bellamkonda\\Downloads\\move1.txt");
                Console.WriteLine("Moved");
            }
            catch(IOException ex)
            {
                Console.WriteLine(ex);
            }
        }
    }
}